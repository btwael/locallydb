// Generated by CoffeeScript 1.10.0
(function() {
  var Document, ErrorManager, now,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  ErrorManager = require('./errormanager');

  now = require('./utils').now;

  Document = (function() {
    function Document(obj, _collection) {
      var key, ref, value;
      this._collection = _collection;
      for (key in obj) {
        value = obj[key];
        if (ref = !key, indexOf.call(Document.properties.reserved, ref) >= 0) {
          this[key] = value;
        }
      }
    }

    Document.prototype.getCollection = function() {
      return this._collection;
    };

    Document.prototype.hasProperty = function(key) {
      return this.hasOwnProperty(key);
    };

    Document.prototype.getProperty = function(key) {
      if (indexOf.call(Document.properties.reserved, key) >= 0) {
        return ErrorManager["throw"](201, [key]);
      }
      if (this.hasProperty(key)) {
        return this[key];
      }
      return ErrorManager["throw"](204, [key]);
    };

    Document.prototype.setProperty = function(key, value) {
      if (indexOf.call(Document.properties.reserved, key) >= 0) {
        return ErrorManager["throw"](202, [key]);
      }
      if (indexOf.call(Document.properties.unchangeable, key) >= 0) {
        return ErrorManager["throw"](203, [key]);
      }
      this.$update();
      return this[key] = value;
    };

    Document.prototype.$update = function(time) {
      if (time == null) {
        time = null;
      }
      if (time === null) {
        time = now();
      }
      this.meta._updated = time;
      return this.getCollection().$update(time);
    };

    return Document;

  })();

  Document.properties = {
    reserved: ['getCollection', 'hasProperty', 'getProperty', 'setProperty', '$update'],
    unchangeable: ['_collection', '_id', '_created', '_updated']
  };

  module.exports = Document;

}).call(this);
